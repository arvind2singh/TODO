{"version":3,"sources":["components/Pagination.jsx","components/UserList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Pagination","props","showPerPage","onPaginationChange","total","useState","counter","setCounter","useEffect","value","onButtonClick","type","Math","ceil","className","aria-label","style","float","onClick","UserList","user_list","setUserList","setTotal","setShowPerPage","page","setPage","start","end","pagination","setPagination","arr","fetch","then","res","json","result","data","per_page","console","log","error","d","arrr","concat","scope","slice","map","item","id","first_name","last_name","email","height","width","src","avatar","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","state","preloadedState","name","age","status","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.034585d3.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst Pagination = (props) => {\r\n  var showPerPage= props.showPerPage;\r\n  var onPaginationChange = props.onPaginationChange;\r\n  var total = props.total;\r\n  const [counter, setCounter] = useState(1);\r\n  \r\n  useEffect(() => {\r\n    const value = showPerPage * counter;\r\n    onPaginationChange(value - showPerPage, value);\r\n  }, [counter]);\r\n\r\n  const onButtonClick = (type) => {\r\n    if (type === \"prev\") {\r\n      if (counter === 1) {\r\n        setCounter(1);\r\n      } else {\r\n        setCounter(counter - 1);\r\n      }\r\n    } else if (type === \"next\") {\r\n      if (Math.ceil(total / showPerPage) === counter) {\r\n        setCounter(counter);\r\n      } else {\r\n        setCounter(counter + 1);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"row\">\r\n          <div className=\"col-lg-6\">\r\n              <p className=\"m-b-0 h5\">Showing {counter} of {Math.ceil(total / showPerPage)}</p>\r\n          </div>\r\n          <div className=\"col-lg-6\">\r\n              <nav aria-label=\"Page m-b-0\">\r\n                  <ul className=\"pagination pagination-flat\" style={{float:'right'}}>\r\n                      <li className=\"page-item\">\r\n                          <a className=\"page-link\" onClick={() => onButtonClick(\"prev\")}>Previous</a>\r\n                      </li>\r\n                      <li className=\"page-item\">\r\n                          <a className=\"page-link\" onClick={() => onButtonClick(\"next\")}>Next</a>\r\n                      </li>\r\n                  </ul>\r\n              </nav>\r\n          </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Pagination;","\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport Pagination from './Pagination';\r\n//import todo from \"../images/todo.svg\";\r\nimport \"../App.css\"\r\n\r\n\r\n\r\nconst UserList = () => {\r\n    const [user_list, setUserList] = useState([]);\r\n     const [total, setTotal] = useState([]);\r\n     const [showPerPage, setShowPerPage] = useState(6);\r\n     const [page, setPage] =useState(1)\r\n    const [pagination, setPagination] = useState({\r\n        start: page,\r\n        end: showPerPage,\r\n    });\r\n    const onPaginationChange = (start, end) => {\r\n        setPagination({ start: start, end: end });\r\n    };\r\n    var arr = [];\r\n    // useEffect(async () => {\r\n    //     const res = fetch(`https://reqres.in/api/users`, {\r\n    //         headers: {\r\n    //             page: 2\r\n    //         }\r\n    //     })\r\n    //     const d = await res.json()\r\n    // }, [])\r\n    useEffect(() => {\r\n        fetch(\"https://reqres.in/api/users?page=1\")\r\n          .then(res => res.json())\r\n          .then(\r\n            (result) => {\r\n                arr=result.data;\r\n                setTotal(result.total)\r\n                setShowPerPage(result.per_page);\r\n                setPage(result.page)\r\n                console.log(\"page1\",result)\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n              console.log(error)\r\n            }\r\n          )\r\n\r\n          fetch(\"https://reqres.in/api/users?page=2\")\r\n        .then(d => d.json())\r\n          .then(\r\n            (data) => {\r\n               \r\n                var arrr= [];\r\n                // arrr=data.datadata.data;\r\n                arrr=arr.concat(data.data);\r\n                setUserList(arrr);\r\n            },\r\n            // Note: it's important to handle errors here\r\n            // instead of a catch() block so that we don't swallow\r\n            // exceptions from actual bugs in components.\r\n            (error) => {\r\n              console.log(error)\r\n            }\r\n          )\r\n          \r\n      }, [])\r\n      console.log(\"page3\",user_list)\r\n      \r\n    //   useEffect(() =>{\r\n        \r\n    //   },[])\r\n    return (\r\n        <>\r\n            <div className=\"conatainer-fluid\">  \r\n            <div className=\"row\">\r\n                <div className=\"col-md-1\"></div>\r\n                <div className=\"col-md-10\">\r\n                    <table className=\"table\">\r\n                                            <thead>\r\n                                                <tr className=\"bg-primary\">\r\n                                                    <th className=\"data-serial\" scope=\"col\">Id</th>\r\n                                                    <th className=\"data-serial\" scope=\"col\">Name</th>\r\n                                                    <th className=\"data-name\" scope=\"col\">email</th>\r\n                                                    <th className=\"data-value\" scope=\"col\">Avatar</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            \r\n                                            <tbody>\r\n                                            {user_list?user_list.slice(pagination.start, pagination.end).map((item) => (\r\n                                                \r\n                                                <tr key={item.first_name}>\r\n                                                <th className=\"data-serial\" scope=\"col\">{item.id}</th>\r\n                                                    <th className=\"data-serial\" scope=\"col\">{item.first_name} {item.last_name}</th>\r\n                                                    <th className=\"data-name\" scope=\"col\">{item.email}</th>\r\n                                                    <th className=\"data-value\" scope=\"col\"><img height=\"50\" width=\"60\" src={item.avatar} /></th>\r\n                                                    </tr>\r\n                                                    )):\"\"}\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <Pagination\r\n                            showPerPage={showPerPage}\r\n                            onPaginationChange={onPaginationChange}\r\n                            total={total}\r\n                        />\r\n                                        </div>\r\n                                        <div className=\"col-md-1\"></div>\r\n                                        </div>\r\n                      \r\n                       \r\n                    </div>\r\n                \r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default UserList","import React from 'react';\r\nimport UserList from './components/UserList';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <UserList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {configureStore} from '@reduxjs/toolkit'\nimport {Provider} from 'react-redux'\nconst initialState = {\n  name:\"arvind\",\n  age:20,\n  status:\"coder\"\n}\nconst store = configureStore({\n  reducer:(state)=>{\n    return state\n  },\n  preloadedState:initialState\n})\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}